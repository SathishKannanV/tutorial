##############################################################

# RteIntranet-setup.jy

#

#  1) Create URL for logging configuration

#

##############################################################



import sys

import os.path



global AdminConfig



def readProperties():

	propsFileName = "RteIntranet-setup.properties"

	propsFile = open(propsFileName, 'r')

	for line in propsFile.readlines():

		if (line.find(":=") != -1):

			(key, val) = line.split(":=")

			props[key.strip()] = val.strip()

	propsFile.close()



def createURLResource():

	filename = os.path.normpath(os.path.abspath('../' + props['relativeURLvalue']))

	filename = 'file:///' + filename.replace('\\', '/')

	print "Defining URL resource for logging configuration..."

	name = ['name', props['loggingUrlName']]

	spec = ['spec', filename]

	jndiname = ['jndiName', props['loggingUrlJndiName']]

	urlAttrs = [name, spec, jndiname]

	url = AdminConfig.getid(serverKey + '/URLProvider:' + props['loggingUrlProviderName'] + '/URL:' + props['loggingUrlName'] + '/')

	if (len(url) == 0):

		print "URL resource is not defined.  Defining it..."

		urlp = AdminConfig.getid(serverKey + '/URLProvider:' + props['loggingUrlProviderName'] +'/')

		AdminConfig.create('URL', urlp, urlAttrs)

	else:

		print "URL resource is already defined.  Redefining it..."

		AdminConfig.modify(url, urlAttrs)

	print ("URL resource setup for logging configuration complete.")



#########   Main     ##########



print "Setting up RteIntranet on the test server..."

    

# Dictionary for the properties

props = {}



# Read the properties

readProperties()

                

# Get the server id

serverKey = '/Server:' + props['serverName']

server = AdminConfig.getid(serverKey + '/')



try:

	# Create URL resource

	createURLResource()

	# Save the config

	AdminConfig.save()

	print "Finished setting up RteIntranet on the test server."

except:

	print "Exception occured ", sys.exc_type, sys.exc_value

	print "Stopping script execution.  Nothing saved."
